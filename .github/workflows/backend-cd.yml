name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.4
        env:
          POSTGRES_USER: richard
          POSTGRES_PASSWORD: "#FuckYourMum2020"
          POSTGRES_DB: customer
        ports:
          - 5332:5432
        options: >-
          --health-cmd "pg_isready -U richard -d customer"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Calling curl for Git Repo Checkout
        run: >
          curl -X POST -H 'Content-Type: application/json' -d '{"text": "Checkout Git REPO, that is all ready merged from pull, ready for testing for deployment"}' https://hooks.slack.com/services/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
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_ACCESS_TOKEN}}
      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Build Package Push With Maven
        run: mvn -ntp -B verify -DskipTests -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
        working-directory: backend
      - name: Calling Curl to say mvn verify has run
        run: >
          curl -X POST -H 'Content-Type: application/json' -d '{"text" : "The mvn command has run with the -D docker image tag variable passed to the POM through the mvn command and with a jib build for docker"}' https://hooks.slack.com/services/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
      - name: Update Dockerrun.aws.json api image tag with a new build number
        run: |
          echo "Dockerrun.aws.json before updating the tag"
          cat Dockerrun.aws.json
          sed -i -E 's_(rsmithuchot1/amigoscode-rsu-api:)([^"])_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json After updating the tag"
          cat Dockerrun.aws.json
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          application_name: ${{ secrets.EB_APPLICATION_NAME}}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME}}
          version_label: ${{steps.build-number.outputs.BUILD_NUMBER}}
          version_description: ${{github.SHA}}
          region: ${{secrets.EB_REGION}}
          deployment_package: backend/Dockerrun.aws.json
      - name: Curl call for after AWS upload
        run: >
         curl -X POST -H 'Content-type: application/json' -d '{"text":"AWS UPLOAD"}'  https://hooks.slack.com/services/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
      - name: Commit and Push Dockerrun.aws.json
        run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
            git push
